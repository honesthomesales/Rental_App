name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug repository structure
        run: |
          echo "=== REPOSITORY STRUCTURE DEBUG ==="
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Git remote:"
          git remote -v
          echo "Git branch:"
          git branch -a
          echo "Package files found:"
          find . -name "package*.json" -type f
          echo "Node modules:"
          ls -la node_modules 2>/dev/null || echo "No node_modules found"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Clear npm cache
        run: |
          echo "=== CLEARING NPM CACHE ==="
          npm cache clean --force
          echo "NPM cache cleared"
          
      - name: Navigate to correct directory
        run: |
          echo "=== NAVIGATING TO CORRECT DIRECTORY ==="
          echo "Current directory: $(pwd)"
          echo "Directory contents:"
          ls -la
          echo "Looking for package-lock.json..."
          find . -name "package-lock.json" -type f
          
      - name: Install root dependencies
        run: |
          echo "=== INSTALLING ROOT DEPENDENCIES ==="
          # Try to find and use the correct package-lock.json
          if [ -f "package-lock.json" ]; then
            echo "Found package-lock.json in current directory"
            npm ci
          elif [ -f "../package-lock.json" ]; then
            echo "Found package-lock.json in parent directory"
            cd .. && npm ci
          else
            echo "ERROR: package-lock.json not found anywhere!"
            find . -name "package-lock.json" -type f
            exit 1
          fi
          echo "Root dependencies installed successfully"

      - name: Install workspace dependencies  
        run: |
          echo "=== INSTALLING WORKSPACE DEPENDENCIES ==="
          # Make sure we're in the right directory for workspace install
          if [ ! -f "package-lock.json" ]; then
            echo "Moving to directory with package-lock.json..."
            cd ..
          fi
          npm install --workspaces
          echo "Workspace dependencies installed successfully"

      - name: Verify dependencies
        run: |
          echo "=== VERIFYING DEPENDENCIES ==="
          echo "Root node_modules:"
          ls -la node_modules | head -10
          echo "Web app node_modules:"
          ls -la apps/web/node_modules 2>/dev/null | head -10 || echo "No web node_modules found"

      - name: Build packages first
        run: |
          echo "=== BUILDING PACKAGES ==="
          # Make sure we're in the right directory for building
          if [ ! -f "package-lock.json" ]; then
            echo "Moving to directory with package-lock.json..."
            cd ..
          fi
          npm run build:packages
          echo "Packages built successfully"

      - name: Build web app
        run: |
          echo "=== BUILDING WEB APP ==="
          # Make sure we're in the right directory for building
          if [ ! -f "package-lock.json" ]; then
            echo "Moving to directory with package-lock.json..."
            cd ..
          fi
          cd apps/web
          npm run build
          echo "Web app built successfully"

      - name: Verify build output
        run: |
          echo "=== VERIFYING BUILD OUTPUT ==="
          ls -la apps/web/out
          echo "Build output verified successfully"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: apps/web/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
